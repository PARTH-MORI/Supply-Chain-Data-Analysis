### PART A:::

-- 1.	Read the data from all tables.

-- 2.	Find the country wise count of customers.
SELECT 
    country, COUNT(*) num_customers
FROM
    customer
GROUP BY country;

-- 3.	Display the products which are not discontinued.
SELECT DISTINCT
    productname
FROM
    product
WHERE
    isdiscontinued = 0;

-- 4.	Display the list of companies along with the product name that they are supplying.
# Approach 1
SELECT 
    companyname, productname
FROM
    supplier s,
    product p
WHERE
    s.id = p.supplierid;

# Approach 2
SELECT 
    companyname, productname
FROM
    supplier s
        JOIN
    product p ON s.id = p.supplierid;

-- 5.	Display customer's information who stays in 'Mexico'
SELECT 
    *
FROM
    customer
WHERE
    Country = 'Mexico';

-- 6.	Display the price of costliest item that is ordered by the customer along with the customer details.
SELECT 
    firstname,
    lastname,
    ordernumber,
    productid,
    productname,
    oi.unitprice
FROM
    customer c,
    orders o,
    orderitem oi,
    product p
WHERE
    c.id = o.customerid
        AND o.id = oi.orderid
        AND oi.productid = p.id
        AND oi.unitprice = (select max(unitprice) from orderitem)
ORDER BY unitprice DESC;

-- 7.	Display supplier id who owns highest number of products.
SELECT 
    s.id SupplierID, COUNT(*) num_products
FROM
    supplier s,
    product p
WHERE
    s.id = p.supplierid
GROUP BY s.id
ORDER BY COUNT(*) DESC;

-- 8.	Display month wise and year wise count of the orders placed.
SELECT 
    CONCAT(YEAR(orderdate), '-', MONTH(orderdate)) month_year,
    COUNT(*) num_orders
FROM
    orders
GROUP BY 1;

-- 9.	Which country has maximum suppliers.
SELECT 
    country, COUNT(*) num_suppliers
FROM
    supplier
GROUP BY country
ORDER BY COUNT(*) DESC;

-- 10. Which customers did not place any order.
SELECT 
    firstname, lastname
FROM
    customer
WHERE
    id NOT IN (SELECT 
            customerid
        FROM
            orders);

### PART B:::

-- 1.	Arrange the product id, product name based on high demand by the customer.
SELECT 
    oi.productid, p.productname, COUNT(*) num
FROM
    orders o
        JOIN
    orderitem oi ON o.id = oi.orderid
        JOIN
    product p ON oi.productid = p.id
GROUP BY 1
ORDER BY 3 DESC;

-- 2.	Display the number of orders placed every year.
SELECT 
    YEAR(orderdate), COUNT(*) num_orders
FROM
    orders
GROUP BY 1;

-- 3.	Calculate year-wise total revenue.
SELECT 
    YEAR(orderdate), SUM(TotalAmount) revenue
FROM
    orders
GROUP BY 1;

-- 4.	Display the customer details whose order amount is maximum including his past orders.
SELECT 
    DISTINCT c.Id, FirstName, LastName, City, Country, Phone
FROM
    Customer c JOIN Orders o
WHERE
    C.id = (SELECT CustomerId FROM orders
			WHERE TotalAmount = (SELECT MAX(TotalAmount) FROM orders));

-- 5.	Display total amount ordered by each customer from high to low. (donot use sum)
SELECT 
    CustomerID, TotalAmount
FROM
    Orders
ORDER BY TotalAmount DESC;


/* A sales and marketing department of this company wants to find out how frequently 
customer have business with them. This can be done in two ways. (Answer Q 6 and Q 7 for the same) */
-- 6 Approach 1. List the current and previous order amount for each customers.
-- Current Order = Last order
-- Previous Order = All Previous Orders

select * from (
with current_order as (
select CustomerID, DATE(OrderDate) OrderDate, TotalAmount,
first_value(DATE(OrderDate)) OVER(partition by CustomerID order by DATE(OrderDate) DESC) LastOrder
from Orders)
select CustomerID, SUM(TotalAmount) as CurrentOrderAmount from current_order where OrderDate = LastOrder GROUP BY 1) t
LEFT JOIN
(with previous_order as (
select CustomerID, DATE(OrderDate) OrderDate, TotalAmount,
first_value(DATE(OrderDate)) OVER(partition by CustomerID order by DATE(OrderDate) DESC) LastOrder
from Orders)
select CustomerID, SUM(TotalAmount) PreviousOrdersAmount from previous_order where OrderDate <> LastOrder GROUP BY 1) t2 using(CustomerID);


/* 7. Approach 2. Display the customerid, order ids and the 
order dates together for every customer in the table:: */
SELECT 
    customerid,
    LTRIM(GROUP_CONCAT(' ',
        CONCAT(id, ' (', DATE(orderdate), ')'))) `OrderID & Date`
FROM
    orders
GROUP BY 1;

-- 8.	Find out top 3 suppliers in terms of revenue generated by their products.







